
//! Autogenerated weights for `swap`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-11-15, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("xxnetwork-dev"), DB CACHE: 128

// Executed Command:
// ./xxnetwork-chain
// benchmark
// --chain=xxnetwork-dev
// --steps=50
// --repeat=20
// --pallet=swap
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights/swap.rs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{RefTimeWeight , Weight}};
use sp_std::marker::PhantomData;

/// Weight functions for `swap`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> swap::WeightInfo for WeightInfo<T> {
	// Storage: ChainBridge ChainNonces (r:1 w:1)
	// Storage: Swap SwapFee (r:1 w:0)
	// Storage: System Account (r:3 w:3)
	// Storage: Swap FeeDestination (r:1 w:0)
	fn transfer_native() -> Weight {
		Weight::from_ref_time(91_302_000 as RefTimeWeight)
			.saturating_add(T::DbWeight::get().reads(6 as RefTimeWeight))
			.saturating_add(T::DbWeight::get().writes(4 as RefTimeWeight))
	}
	// Storage: System Account (r:2 w:2)
	fn transfer() -> Weight {
		Weight::from_ref_time(53_000_000 as RefTimeWeight)
			.saturating_add(T::DbWeight::get().reads(2 as RefTimeWeight))
			.saturating_add(T::DbWeight::get().writes(2 as RefTimeWeight))
	}
	// Storage: Swap SwapFee (r:0 w:1)
	fn set_swap_fee() -> Weight {
		Weight::from_ref_time(14_538_000 as RefTimeWeight)
			.saturating_add(T::DbWeight::get().writes(1 as RefTimeWeight))
	}
	// Storage: Swap FeeDestination (r:0 w:1)
	fn set_fee_destination() -> Weight {
		Weight::from_ref_time(14_768_000 as RefTimeWeight)
			.saturating_add(T::DbWeight::get().writes(1 as RefTimeWeight))
	}
}
